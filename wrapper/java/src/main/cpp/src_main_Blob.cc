/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "hermes_java_wrapper.h"

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     src_main_java_Blob
 * Method:    fromString
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT jobject JNICALL Java_src_main_java_Blob_fromString(
    JNIEnv *env, jobject blob_java, jstring data_java) {
  JavaStringWrap data(env, data_java);
  hapi::Blob blob(strlen(data.data_) + 1);
  strncpy(blob.data(), data.data_, blob.size());
  return HERMES_JAVA_WRAPPER->ConvertBlobToJava(env, blob);
}

/*
 * Class:     src_main_java_Blob
 * Method:    close
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_src_main_java_Blob_close(JNIEnv *env,
                                                     jobject blob_java) {
  hapi::Blob blob = HERMES_JAVA_WRAPPER->GetBlobFromJava(env, blob_java);
  blob.destructable_ = true;
}

#ifdef __cplusplus
}
#endif
