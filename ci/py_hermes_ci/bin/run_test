#!/usr/bin/env python3

from jarvis_util.util.naming import to_camel_case
from jarvis_util.util.import_mod import load_class
import sys, os
import pathlib

if __name__ == '__main__':
    if len(sys.argv) != 4:
        print("USAGE: ./run_test [TEST_TYPE] [TEST_NAME] [CMAKE_BINARY_DIR]")
        exit(1)
    test_type = sys.argv[1]
    test_name = sys.argv[2]
    cmake_binary_dir = sys.argv[3]
    # The root of Hermes
    HERMES_ROOT = str(pathlib.Path(__file__).parent.
                      parent.parent.parent.resolve())
    ADAPTER_TEST_ROOT = f"{HERMES_ROOT}/adapter/test"
    # Ensure subsequent classes know how to resolve py_hermes_ci package
    sys.path.insert(0, f"{HERMES_ROOT}/ci/py_hermes_ci")
    # Choose which unit test file to load
    if test_type == 'stdio':
        pkg_dir = f"{ADAPTER_TEST_ROOT}/{test_type}"
    elif test_type == 'posix':
        pkg_dir = f"{ADAPTER_TEST_ROOT}/{test_type}"
    elif test_type == 'mpiio':
        pkg_dir = f"{ADAPTER_TEST_ROOT}/{test_type}"
    elif test_type == 'vfd':
        pkg_dir = f"{ADAPTER_TEST_ROOT}/{test_type}"
    elif test_type == 'native':
        pkg_dir = f"{HERMES_ROOT}/test"
    else:
        raise Exception("Could not find the unit test")
    # Load the unit test
    test_cls = load_class(f"tests",
                          pkg_dir,
                          to_camel_case(f"{test_type}_test_manager"))
    tests = test_cls(HERMES_ROOT, cmake_binary_dir)
    tests.call(test_name)
