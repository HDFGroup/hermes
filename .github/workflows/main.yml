# CodeCoverage result can be found at https://coveralls.io/github/HDFGroup/hermes

name: GitHub Actions

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  LOCAL: local

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Get Sources
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v1

      - name: Run cpplint
        run: pip install cpplint==1.5.4 && cpplint --recursive --exclude=src/stb_ds.h .

      - name: Cache Spack packages
        uses: actions/cache@v2
        id: spack-cache
        with:
          path: ~/${{ env.LOCAL }}
          key: ${{ runner.os }}-${{ hashFiles('ci/**') }}

      - name: Install APT Dependencies
        run: |
          sudo apt update
          sudo apt-get install -y autoconf
          sudo apt-get install -y automake
          sudo apt-get install -y libtool
          sudo apt-get install -y libtool-bin
          sudo apt-get install -y mpich
          sudo apt-get install -y lcov
          sudo apt-get install -y zlib1g-dev
          sudo apt-get install -y libsdl2-dev

      - name: Build And Install Dependencies
        if: steps.spack-cache.outputs.cache-hit != 'true'
        run: ci/install_deps.sh

      - name: Build and Test
        run: ci/install_hermes.sh

      - name: Install
        run: pushd build && make install && popd

      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled && (failure() || !failure()) }}

      - name: Multi-node Test
        run: pushd ci/cluster && ./multi_node_ci_test.sh

      - name: Generate coverage file
        run: |
          COVERAGE_DIR=${GITHUB_WORKSPACE}/coverage
          mkdir -p ${COVERAGE_DIR}
          pushd ${GITHUB_WORKSPACE}/build
          lcov -c -d . -o "${COVERAGE_DIR}/tmp.info"
          lcov --remove "${COVERAGE_DIR}/tmp.info"   \
                        "/usr/include/*"             \
                        "${HOME}/${LOCAL}/*"         \
                        "*/stb_ds.h"                 \
                        -o ${COVERAGE_DIR}/lcov.info

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
